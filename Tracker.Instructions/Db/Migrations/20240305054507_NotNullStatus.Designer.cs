// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tracker.Instructions.Db;

#nullable disable

namespace Tracker.Instructions.Db.Migrations
{
    [DbContext(typeof(InstructionsDbContext))]
    [Migration("20240305054507_NotNullStatus")]
    partial class NotNullStatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tracker.Instructions.Db.Models.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deadline");

                    b.Property<DateTime?>("ExecDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("exec_date");

                    b.Property<string>("ExecutorId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("executor_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer")
                        .HasColumnName("status_id");

                    b.Property<string>("TreePath")
                        .HasColumnType("text")
                        .HasColumnName("tree_path");

                    b.HasKey("Id")
                        .HasName("pk_instructions");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("ix_instructions_creator_id");

                    b.HasIndex("ExecutorId")
                        .HasDatabaseName("ix_instructions_executor_id");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_instructions_parent_id");

                    b.HasIndex("StatusId")
                        .HasDatabaseName("ix_instructions_status_id");

                    b.ToTable("instructions", (string)null);
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.InstructionClosure", b =>
                {
                    b.Property<int>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("parent_id");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("Depth")
                        .HasColumnType("integer")
                        .HasColumnName("depth");

                    b.HasKey("ParentId", "Id")
                        .HasName("pk_instructions_closures");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_instructions_closures_id");

                    b.ToTable("instructions_closures", (string)null);
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_status");

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("BossId")
                        .HasColumnType("text")
                        .HasColumnName("boss_id");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("BossId")
                        .HasDatabaseName("ix_users_boss_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.Instruction", b =>
                {
                    b.HasOne("Tracker.Instructions.Db.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructions_users_creator_id");

                    b.HasOne("Tracker.Instructions.Db.Models.User", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructions_users_executor_id");

                    b.HasOne("Tracker.Instructions.Db.Models.Instruction", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("fk_instructions_instructions_parent_id");

                    b.HasOne("Tracker.Instructions.Db.Models.Status", null)
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructions_status_status_id");

                    b.Navigation("Creator");

                    b.Navigation("Executor");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.InstructionClosure", b =>
                {
                    b.HasOne("Tracker.Instructions.Db.Models.Instruction", null)
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructions_closures_instructions_instruction_id");

                    b.HasOne("Tracker.Instructions.Db.Models.Instruction", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructions_closures_instructions_instruction_id1");
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.User", b =>
                {
                    b.HasOne("Tracker.Instructions.Db.Models.User", "Boss")
                        .WithMany("Children")
                        .HasForeignKey("BossId")
                        .HasConstraintName("fk_users_users_boss_id");

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.Instruction", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Tracker.Instructions.Db.Models.User", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
